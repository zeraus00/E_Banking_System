@page "/Transfer_receipt"

@inject NavigationManager NavigationManager
@inject ClaimsHelperService _claimsHelper
@inject NexusAuthenticationStateProvider _authenticationStateProvider
@inject PageRedirectService _redirectService
@inject UserDataService _userDataService
@using Helpers;

<div class="page">
    <AuthorizeView Roles="@RoleNames.User">
        <Authorized>
            <main>
                <header class="custom-card-clientpage clientheader py-4 align-items-start">
                    <div class="px-5">
                        <div class="d-flex align-items-center my-4">
                            <h2>Transfer Money</h2>
                        </div>
                    </div>
                    <section class="d-flex justify-content-end align-items-end mx-5 gap-2">
                        <p class="fs-6 fw-lighter align-text-bottom">Current Balance: </p>
                        <div class="custom-card-clientpage current-balance d-flex align-items-center justify-content-center mx-3 mt-2">
                            @currentBalance
                        </div>
                    </section>
                </header>

                <div class="container">
                    <section class="card registration shadow-lg my-5 p-3">
                        <div class="d-flex gap-2 text-start border-bottom w-100 align-items-center p-4">
                            <h4>Total Amount Transfered: </h4>
                            <h2 class="fw-bolder mx-5">TransferAmount</h2>
                        </div>

                        <div class="d-flex justify-content-between align-items-end my-3 mx-5">
                            <div class="d-flex flex-column text-start mb-0">
                                <h2>To Account: </h2>
                                <h5 class="mb-1">@clientName</h5>
                                <p class="mb-0">@FormatHelper.AccountNumberFormatter(accountNumber)</p>
                                <p class="mb-0">@date</p>
                                <p class="mb-0">confirmationNumber</p>
                            </div>
                            <NavLink class="w-25" href="/Client_home">
                                <button class="btn btn-primary btn-lg w-100">Go Home</button>
                            </NavLink>
                        </div>
                    </section>
                </div>

            </main>
        </Authorized>
    </AuthorizeView>
    
</div>

@code
{
    private ClaimsPrincipal? user;
    private Account? Account;

    private int accountId;

    private string accountNumber = string.Empty;
    private string clientName = string.Empty;
    private decimal currentBalance = 0.0m;
    private DateTime? date;

    protected override async Task OnInitializedAsync()
    {
        //  Get Authentication State
        AuthenticationState authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        user = authState.User;

        //  Redirect to Landing Page if not authenticated
        _redirectService.RedirectIfNotAuthenticated(user);

        //  Retrieve userAuth id from claims.
        var userAuthId = Convert.ToInt32(_claimsHelper.GetClaimValue(user, ClaimTypes.NameIdentifier) ?? "0");

        // //  Retrieve account id list from userAuthObject
        // List<int>? accountIds = await _userDataService.GetAccountIdListAsync(userAuthId);

        // //  Retreive account id from list.
        // var accountId = accountIds?[0] ?? 5;

        var accountId = await _userDataService.GetFirstAccountAsync(userAuthId) ?? 0;

        //  Retriev account from db.
        Account = await _userDataService.GetAccountAsync(accountId);

        if (Account is not null)
        {
            accountNumber = Account.AccountNumber;
            clientName = Account.AccountName;
            currentBalance = Account.Balance;
            date = DateTime.UtcNow;
        }
    }


    // private async Task Transfer()
    // {
    //     //  Put transfer logic here.
    // }
}