@page "/My_accounts"
@attribute [Authorize(Roles = "User")]

@inject NavigationManager NavigationManager
@inject ClaimsHelperService _claimsHelper
@inject UserDataService _userDataService

<div class="page">
    <main>
        <header class="custom-card-clientpage clientheader py-4 align-items-start">
            <div class="px-5">
                <div class="d-flex align-items-center my-4">
                    <h2>My Accounts</h2>
                </div>
            </div>

            <div class="d-flex align-items-center justify-content-center me-5 pt-3">
                <i class="bi bi-gear fs-3" role="button"></i>
            </div>
        </header>

        <div class="card registration shadow-lg d-flex flex-column mt-4 p-3">
            <h2 class="m-3">Manage Accounts</h2>

            <section class="container">
                <div class="carousel">

                    <!-- Balance Card -->
                    @if (accounts is not null && accounts.Any()) 
                    {
                        foreach (var account in accounts)
                        {
                            <section class="carousel-card text-start p-3 border shadow-sm h-100">
                                <h3 class="fw-bold mt-3">@account.AccountName</h3>
                                <h5 class="text-light fw-lighter m-0">@account.AccountNumber</h5>

                                <hr />

                                <div class="d-flex justify-content-between mt-3">
                                    <p class="w-100">Available Balance:</p>
                                    <p class="text-success w-100">@account.Balance</p>
                                </div>

                                <div class="d-flex justify-content-between">
                                    <p class="w-100">Current Balance:</p>
                                    <p class="text-success w-100">@account.Balance</p>
                                </div>

                                <div class="custom-card sm mb-0 pb-0">
                                    <p class="m-1">
                                        <strong>Contact No.:</strong> @(userInfo?.ContactNumber ?? "09123456789")
                                    </p>
                                </div>
                            </section>
                        }
                    }

                </div>
            </section>

        </div>

    </main>

</div>

@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; } = default!;


    private ClaimsPrincipal? user;
    private List<Account>? accounts = new();
    private UserInfo? userInfo;

    protected override async Task OnInitializedAsync() 
    {
        //  Get Authentication state
        AuthenticationState authState = await authenticationState;
        user = authState.User;

        //  Retrieve ids from claims
        var userAuthId = Convert.ToInt32(_claimsHelper.GetClaimValue(user, ClaimTypes.NameIdentifier) ?? "0");
        var userInfoId = Convert.ToInt32(_claimsHelper.GetClaimValue(user, CustomClaimTypes.UserInfoId) ?? "0");

        //  Retrieve account list
        accounts = await _userDataService.GetAccountListAsync(userAuthId);
        userInfo = await _userDataService.GetUserInfoAsync(userInfoId);

    }
}