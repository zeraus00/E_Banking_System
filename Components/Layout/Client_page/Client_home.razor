@page "/Client_home"
@inject NavigationManager NavigationManager
@layout MainLayout

<div class="page">
    <main>
        <header class="custom-card client px-4 pt-4 pb-4">
            <div class="align-items-start">
                <h5>Welcome Back</h5>
                <div class="d-flex align-items-center gap-3">
                    <h1>clientName</h1>
                    <h4 class="account-number">accountNumber</h4>
                </div>
            </div>
            <div class="notification img align-items-end">
                <img src="/bootstrap/Utilities/Bell.png" alt="Notification Bell" />
            </div>
        </header>

        <div class="body-wrapper">
            <section class="custom-card balance md">
                <h3>Current Balance: </h3>
                <div class="fs-1 mx-auto">
                    currentBalance
                </div>
                <div class="custom-card sm">
                    <h6>clientPhone</h6>
                </div>
            </section>

            <!-- Navigation Buttons -->
            <section>
                <nav class="nav-container">
                    <NavLink class="nav-link button" href="/Login_page">
                        <button type="button" class="nav-link button d-flex justify-content-between align-items-center">
                            Withdraw
                            <img src="/bootstrap/Utilities/withdraw.png" alt="Button Icon" style="width: 30px; height: 30px;" />
                        </button>
                    </NavLink>
                    <NavLink class="nav-link button" href="/Login_page">
                        <button type="button" class="nav-link button d-flex justify-content-between align-items-center">
                            Deposit
                            <img src="/bootstrap/Utilities/deposit.png" alt="Button Icon" style="width: 30px; height: 30px;" />
                        </button>
                    </NavLink>
                    <NavLink class="nav-link button" href="/Login_page">
                        <button type="button" class="nav-link button d-flex justify-content-between align-items-center">
                            Transfer
                            <img src="/bootstrap/Utilities/transfer.png" alt="Button Icon" style="width: 20px; height: 20px;" />
                        </button>
                    </NavLink>
                    <NavLink class="nav-link button" href="/Login_page">
                        <button type="button" class="nav-link button d-flex justify-content-between align-items-center">
                            Loan Payment
                            <img src="/bootstrap/Utilities/loan.png" alt="Button Icon" style="width: 20px; height: 20px;" />
                        </button>
                    </NavLink>
                </nav>
            </section>
        </div>

        <!-- Transactions Section -->
        <section class="custom-card transactions mx-3 mt-5">
            <div class="custom-card balance lg text-black">
                <label class="custom-card sm bg-transparent border-bottom justify-content-between fs-4">
                    Recent Transactions
                    <button type="button" class="btn nav-link">View All</button>
                </label>
                @* <div class="row g-2 mt-3 fs-5">
                    @foreach(var transaction in recentTransactions)
                    {
                        <label class="mt-3">@transaction.Type - @transaction.Amount</label>
                    }
                </div> *@
            </div>
        </section>

    </main>
</div>
@* 
@code {
    private string clientName = "Sample Name";
    private string accountNumber = "#123-456";
    private decimal currentBalance = 4055.00M;
    private string clientPhone = "+63 000 000 0000";
    private List<Transaction> recentTransactions = new List<Transaction>();

    protected override async Task OnInitializedAsync()
    {
        // Assuming there's an API endpoint for client data
        var response = await Http.GetFromJsonAsync<Client>("api/client");
        if (response != null)
        {
            clientName = response.Name;
            accountNumber = response.AccountNumber;
            currentBalance = response.Balance;
            clientPhone = response.PhoneNumber;
        }

        var transactionsResponse = await Http.GetFromJsonAsync<List<Transaction>>("api/transactions");
        if (transactionsResponse != null)
        {
            recentTransactions = transactionsResponse;
        }
    }

    public class Transaction
    {
        public string Type { get; set; }
        public decimal Amount { get; set; }
    }

    public class Client
    {
        public string Name { get; set; }
        public string AccountNumber { get; set; }
        public decimal Balance { get; set; }
        public string PhoneNumber { get; set; }
    }
}
@page "/Client_home"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@layout MainLayout

<div class="page">
    <main>
        <div class="custom-card client px-4 pt-4 pb-4">
            <div class="align-items-start">
                <h5>Welcome Back</h5>
                <div class="d-flex align-items-center gap-3">
                    <h1>@clientName</h1>
                    <h4 class="account-number">@accountNumber</h4>
                </div>
            </div>
            <div class="notification img align-items-end">
                <img src="/bootstrap/Utilities/Bell.png" alt="Notification Bell" />
            </div>
        </div>
        <div class="body-wrapper">
            <div class="custom-card balance md">
                <h3>Current Balance: </h3>
                <div class="fs-1 mx-auto">
                    @currentBalance
                </div>
                <div class="custom-card sm">
                    <h6>@clientPhone</h6>
                </div>
            </div>

            <!-- Navigation Buttons -->
            <div>
                <nav class="nav-container">
                    <NavLink class="nav-link button" href="/Login_page">
                        <button type="button" class="nav-link button">Withdraw</button>
                    </NavLink>
                    <NavLink class="nav-link button" href="/Login_page">
                        <button type="button" class="nav-link button">Deposit</button>
                    </NavLink>
                    <NavLink class="nav-link button" href="/Login_page">
                        <button type="button" class="nav-link button">Transfer</button>
                    </NavLink>
                    <NavLink class="nav-link button" href="/Login_page">
                        <button type="button" class="nav-link button">Loan Payment</button>
                    </NavLink>
                </nav>
            </div>
        </div>

        <!-- Transactions Section -->
        <div class="custom-card transactions mx-3 mt-5">
            <div class="custom-card balance lg text-black">
                <label class="custom-card sm bg-transparent border-bottom justify-content-between fs-4">
                    Recent Transactions
                    <button type="button" class="btn nav-link">View All</button>
                </label>
                <div class="row g-2 mt-3 fs-5">
                    @foreach(var transaction in recentTransactions)
                    {
                        <label class="mt-3">@transaction.Type - @transaction.Amount</label>
                    }
                </div>
            </div>
        </div>

    </main>
</div>

@code {
    private string clientName = "Sample Name";
    private string accountNumber = "#123-456";
    private decimal currentBalance = 4055.00M;
    private string clientPhone = "+63 000 000 0000";
    private List<Transaction> recentTransactions = new List<Transaction>();

    protected override async Task OnInitializedAsync()
    {
        // Assuming there's an API endpoint for client data
        var response = await Http.GetFromJsonAsync<Client>("api/client");
        if (response != null)
        {
            clientName = response.Name;
            accountNumber = response.AccountNumber;
            currentBalance = response.Balance;
            clientPhone = response.PhoneNumber;
        }

        var transactionsResponse = await Http.GetFromJsonAsync<List<Transaction>>("api/transactions");
        if (transactionsResponse != null)
        {
            recentTransactions = transactionsResponse;
        }
    }

    public class Transaction
    {
        public string Type { get; set; }
        public decimal Amount { get; set; }
    }

    public class Client
    {
        public string Name { get; set; }
        public string AccountNumber { get; set; }
        public decimal Balance { get; set; }
        public string PhoneNumber { get; set; }
    }
}
 *@