@inject IWebHostEnvironment Env
@inject UserDataService _userDataService;
@inject ClaimsHelperService _claimsHelper

<AuthorizeView Roles = "User, Administrator, Employee">
    <Authorized>
        <!-- Side NavBar Layout -->
        <nav class="sidebar">
            <!-- Top Row -->
            <div class="top-row border-bottom">

                <!-- Profile Picture Container (Draft) -->
                <div class="profile-picture_container">
                    <div class="profile-placeholder"></div>
                    @* 
                    <label for="fileInput">
                        @if (previewImage != null)
                        {
                            <img src="@previewImage" class="profile-picture" />
                        }
                        else
                        {
                            <div class="profile-placeholder">
                                <span>No Image</span>
                            </div>
                        }
                    </label>

                    <div class="edit-overlay">
                        <i class="fas fa-camera"></i>
                    </div>
                    <InputFile id="fileInput" style="display: none;" OnChange="HandleSelected" accept="image/*" /> *@
                </div>

                <div class="text-light mt-3">
                    <p class="m-0 p-0">@_fullName</p>
                    <p style="font-size: small;">@_email</p>
                </div>

            </div>

            <!-- Sidebar Navigation Links (Middle Row)-->
            <div class="position-relative" onclick="document.querySelector('.toggler').click()">
                <p class="position-absolute text-light top-0 start-0 mx-4 my-3 fw-lighter" style="font-size: 0.75rem;">USER</p>
                <div class="middle-row border-bottom">
                    <nav class="flex-column">
                        <div class="nav-item px-3 pt-5">
                            <NavLink class="nav-link" href="/Client_home" Match="NavLinkMatch.All">Home</NavLink>
                        </div>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="/My_accounts">My Accounts</NavLink>
                        </div>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="/Withdraw_amount">Withdraw</NavLink>
                        </div>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="/Deposit_amount">Deposit</NavLink>
                        </div>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link lh-sm" href="/Transaction">Transactions</NavLink>
                        </div>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link lh-sm" href="/Transfer_amount">Transfer Money</NavLink>
                        </div>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link lh-sm" href="/Apply_loan">Apply for Loan</NavLink>
                        </div>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link lh-sm" href="/Loan_balance">Check Loan Balance</NavLink>
                        </div>
                    </nav>
                </div>
            </div>

            <!-- Sidebar Navigation Links (Bottom Row) -->
            <div class="position-relative" onclick="document.querySelector('.toggler').click()">
                <p class="position-absolute text-light top-0 start-0 mx-4 my-3 fw-lighter" style="font-size: 0.75rem;">OTHERS</p>
                <div class="bottom-row">
                    <nav class="flex-column">
                        <div class="nav-item px-3 pt-5">
                            <NavLink class="nav-link" href="/Settings_page" Match="NavLinkMatch.All">Settings</NavLink>
                        </div>
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="/Logout_page"> Logout</NavLink>
                        </div>
                    </nav>
                </div>
            </div>

        </nav>
    </Authorized>

</AuthorizeView>


@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; } = default!;

    private ClaimsPrincipal? _user;
    private UserInfo? UserInfo;
    private string _fullName = string.Empty;
    private string _email = string.Empty;

    protected override async Task OnInitializedAsync() 
    {
        AuthenticationState authState = await authenticationState;
        _user = authState.User;


        if (_claimsHelper.IsAuthenticated(_user)) 
        {
            int userInfoId = Convert.ToInt32(_user.FindFirst(c => c.Type == CustomClaimTypes.UserInfoId)?.Value ?? "0");
            UserInfo = await _userDataService.GetUserInfoAsync(userInfoId);
            _fullName = _userDataService.GetUserFullName(UserInfo) ?? "Name not found";
            _email = _user.FindFirst(c => c.Type == ClaimTypes.Name)?.Value ?? "Email not found";
        }
    }
}

@* 
@code {
    private string? previewImage;

    private async Task HandleSelected(InputFileChangeEventArgs e)
    {
        var imageFile = e.File;
        var buffer = new byte[imageFile.Size];
        await imageFile.OpenReadStream(5 * 1024 * 1024).ReadAsync(buffer);
        previewImage = $"data:image/png;base64,{Convert.ToBase64String(buffer)}";

        var uploadsPath = Path.Combine(Env.WebRootPath, "uploads");
        Directory.CreateDirectory(uploadsPath);
        var filePath = Path.Combine(uploadsPath, imageFile.Name);
        using var fs = new FileStream(filePath, FileMode.Create);
        await imageFile.OpenReadStream().CopyToAsync(fs);
    }
}
 *@