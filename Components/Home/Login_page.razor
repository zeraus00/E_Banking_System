@page "/Login_page"
@inject NavigationManager NavigationManager
@inject NavigationManager Navigation
@using Layout
@layout PlainLayout

<div class="page">
	<main>

		<!-- Login Box -->
		<div class="card login p-4 shadow-lg">
			<div class="d-flex justify-content-end">

				<!-- Close Button -->
				<NavLink href="/">
					<button type="button" class="btn-close" aria-label="Close"></button>
				</NavLink>
			</div>
			<h2 class="text-center fw-bold">User Login</h2>



			<div class="loginform px-4">
				<input class="form-control form-control-custom form-control-lg mb-3" @bind="email" placeholder="Email">
				<input class="form-control form-control-custom form-control-lg" type="password" @bind="password" placeholder="Password">
				
				<div class="col d-flex align-items-center mt-1">

					<div class="form-check">
						<input class="form-check-input" type="checkbox" id="rememberMe">
						<label class="form-check-label" for="rememberMe">
							Remember me
						</label>
					</div>

					<NavLink class="nav-link ms-auto" href="/Forgot_password">
						<span class="bi bi-info-circle-fill"></span> Forget Password?
					</NavLink>

				</div>
			</div>

			<div class="rpw mb-2 px-4">
				<NavLink class="d-grid" href="/Client_home">
					<button class="btn btn-primary" @onclick="LoginAsync"> Log in</button>
				</NavLink>
			</div>

			<div class="rpw px-4">
				<div class="col d-flex align-items-center">
					<p class="mb-0">Do not have an account?</p>
					<NavLink class="nav-link ms-auto" href="Sign_up_page">
						Register
					</NavLink>
				</div>
			</div>

		</div>
	</main>
</div>


@code {
	public string email = "";
	public string password = "";
	public string error = "";

	@code {
		private async Task LoginAsync()
		{
			// Perform login logic here, such as checking credentials
			bool isLoginSuccessful = await AuthenticateUserAsync();

			if (isLoginSuccessful)
			{
				// Navigate to the homepage (or any page after login)
				Navigation.NavigateTo("/Client_home");
			}
			else
			{
				// Handle failed login attempt (e.g., show error message)
			}
		}

		private Task<bool> AuthenticateUserAsync()
		{
			// Add your authentication logic here.
			// Return true if the login is successful, otherwise false.
			return Task.FromResult(true); // For demo purposes, assume the login is always successful
		}
	}
}


@* 	private void LoginAsync()
	{
		if (string.IsNullOrEmpty(email) || string.IsNullOrEmpty(password))
		{
			error = "Please fill in both the email and password.";
			return;
		}

		error = "";
		NavigationManager.NavigateTo("/Client_home_page");
	} *@